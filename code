i am trying to pass my apllication in jenkins pipeline
follwoings are my configuration files
1) _scm_container\visualization-mf\container.yaml
"""
# Sets the name of the docker image pushed to Artifactory repository
# Sets the name of the docker image to build from the Dockerfile or pulled from the internet - If no Dockerfile is present the pipeline will attempt to pull from the internet
name: visualization-mf

tagStrategies:
  
  dev:
    branches:
      - develop
      - feature/*
    tags:
      - ${Major}.${Minor}.${Patch}-beta.${CommitsSinceVersionSource}
  prerelease:
    tags:
      - ${Major}.${Minor}.${Patch}-${PreReleaseTag}
  release:
    tags:
      - ${Major}.${Minor}.${Patch}
      - ${Major}.${Minor}
      - ${Major}
      - latest

 
# Desired tags of image - If no Dockerfile is present the pipeline will attempt to pull each tag from the internet
# tags:
#   - stable
#   - latest
 
# Whether or not to build with the --no-cache flag on the docker build command (Defaults to true)
useDockerCache: true
 
# Whether to override the image source. If true it will allow an upload from any repo regardless of where the image was originally uploaded from.
overrideImageSource: false
 
######   Additional Parameters   ######
# Define how Docker Image pipeline should process this image. Default value - false. Supported values
# true - build and uploaded to Artifactory
# false - skip the build and upload to Artifactory. If image was previously uploaded it will not be changed.
# delete - delete the image versions defined in this container.yaml
build: true
 
# Required for ASx projects only. Should map with the associated Artifactory Repository of your Docker Registry given by the EAT team.
# For a Docker Registry that is accessed as taaa-docker.artifactrepo.jnj.com, this should be taaa-docker
artifactoryRepository: javz-docker
"""
following is my 2)  _scm_container\visualization-mf\Dockerfile
"""
FROM jnj.artifactrepo.jnj.com/nginxinc/nginx-unprivileged:1.24-alpine

# Remove the default Nginx configuration
RUN rm /etc/nginx/conf.d/default.conf

# Inline Nginx configuration that listens on 0.0.0.0:3000
RUN echo 'server { \
    listen 0.0.0.0:3000; \
    server_name localhost; \
    location / { \
        root /usr/share/nginx/html; \
        index index.html; \
        try_files $uri $uri/ /index.html; \
    } \
}' > /etc/nginx/conf.d/default.conf


# Copy the contents of the build folder to the Nginx web server directory
COPY build/ /usr/share/nginx/html/

# Expose port 3000
EXPOSE 3000

# Start Nginx and your React application on port 3000
CMD ["nginx", "-g", "daemon off;"]
"""
following is my _scm_helm\values.yaml
"""
# Default values for jnj-rise.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1
image:
  repository: javz-docker.artifactrepo.jnj.com/visualization-mf
  pullPolicy: IfNotPresent
  tag: 1.0.0
imagePullSecrets:
- name: javz-docker-artifactory
nameOverride: ""
fullnameOverride: ""
serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:
podSecurityContext: {}
# fsGroup: 2000

securityContext: {}
# capabilities:
#   drop:
#   - ALL
# readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000

service:
  type: ClusterIP
  port: 80

"""
4) following is my _scm_helm\Chart.yaml
"""
apiVersion: v2
appVersion: 1.0
name: rise-visualization-mf
description: Visualization microfrontend application helm chart for RISE
version: 1.0.0
# A chart can be either an 'application' or a 'library' chart.
##
# Application charts are a collection of templates that can be packaged into versioned archives
# to be deployed.
#
# Library charts provide useful utilities or functions for the chart developer. They're included as
# a dependency of application charts to inject those utilities and functions into the rendering
# pipeline. Library charts do not define any templates and therefore cannot be deployed.
type: application

"""
follwoing is my 5) manifest-advanced.yaml
"""
# Pipeline details across environments (defaults)
common:
  pipelineType: app-dev
  debug: true
  helm:
    chartRepo: javz-helm-charts
    chartName: rise-visualization-mf

  versionFileUpdates:
    - type: yaml
      file: _scm_helm/Chart.yaml
      path: version
    - type: yaml
      file: _scm_helm/values.yaml
      path: image.tag
  assembleForPackage:
    type: npm
    enabled: true
    credentialsId: jnj-eat-artifactory-build
    dir: project
    installCommand: npm install
    persistStash: true
  versionCalculation:
    enabled: true
    type: gitversion

  unitTest:
    enabled: false

  lint:
    enabled: false

  staticAnalysis:
    enabled: false
    type: multi
    stages:
      sonar:
        enabled: false
        type: sonar
        shortLivedAnalysis: false
        longLivedAnalysis: false
        shortLivedBuildResults:
          BLOCKER:
            FAILURE: 0
          CRITICAL:
            FAILURE: 50
          IGNORE:
            MAJOR: true
            MINOR: true
            INFO: true
          QUALITY_GATE:
            ERROR: FAILURE
            WARN: SUCCESS
        longLivedBuildResults:
          BLOCKER:
            FAILURE: 0
          CRITICAL:
            FAILURE: 50
          IGNORE:
            MAJOR: true
            MINOR: true
            INFO: true
          QUALITY_GATE:
            ERROR: UNSTABLE
            WARN: SUCCESS

  package:
    enabled: false
    type: multi
    stages:
      Helm:
        type: helm
        enabled: false
        chartRepo: javz-helm-charts
        chartName: rise-visualization-mf
        versionFileUpdates:
          - type: yaml
            file: _scm_helm/Chart.yaml
            path: version
          - type: yaml
            file: _scm_helm/values.yaml
            path: image.tag
      tar-package:
        type: tar.gz
        enabled: false
        name: visualization-mf
        packageDir: ./

  publish:
    enabled: false
    type: "multi"
    stages:
      artifactory-spec:
        enabled: false
        type: artifactory-spec
        target: javz-docker/visualization-mf/
        fileName: visualization-mf-*.tar.gz
      Helm:
        enabled: false
        type: helm
        chartRepo: javz-helm-charts
        chartName: rise-visualization-mf
      Docker:
        enabled: false
        type: docker
        credsList:
          - registry: https://jnj.artifactrepo.jnj.com
            credentialsId: jnj-eat-artifactory
          - registry: https://javz-docker.artifactrepo.jnj.com
            credentialsId: sourcecode-bitbucket

  buildAnalysis:
    enabled: false
    xrayFailBuild: false

  buildAnnouncements:
    enabled: true
    destinations:
      team-emails:
        type: email
        format: buildstate
        recipients: [DL-RISE-Monitoring@its.jnj.com]
        startEnabled: false
        successEnabled: true
        unstableEnabled: true
        failureEnabled: true
        jobTriggers: []

  deploy:
    enabled: true
    type: "multi"
    parallel: "false"
    stages:
      # appDeployment section deploys the published helm chart to kubernetes cluster
      appDeployment:
        enabled: false
        type: helm
        name: rise-visualization-mf
        createNamespace: true
        chartRepoCredentialsId: "sourcecode-bitbucket"
        atomic: true
        kubernetesConfig:
          type: eks
          name: itx-bvx-rise-test
          region: us-east-1
          credentialsId: "itx-bvx-eatjenkinsadminapi"

  resolveArtifacts:
    enabled: false

environments:

  
  DEV:
    cmdb:
      appid: APP000010043717
      deploymentEnvironment: development
    versionCalculation:
      patternType: jnj-developer-branch
    unitTest:
      enabled: false
      dir: "project"
      type: npm
      coverageReportFile: jest/coverage/lcov.info
    lint:
      enabled: true
      dir: "project"
      type: npm
    staticAnalysis:
      enabled: true
      type: multi
      stages:
        sonar:
          enabled: true
          type: sonar
          shortLivedAnalysis: false
          longLivedAnalysis: true
          shortLivedBuildResults:
            BLOCKER:
              FAILURE: 0
            CRITICAL:
              FAILURE: 50
            IGNORE:
              MAJOR: true
              MINOR: true
              INFO: true
            QUALITY_GATE:
              ERROR: FAILURE
              WARN: UNSTABLE
          longLivedBuildResults:
            BLOCKER:
              FAILURE: 0
            CRITICAL:
              FAILURE: 50
            IGNORE:
              MAJOR: true
              MINOR: true
              INFO: true
            QUALITY_GATE:
              ERROR: UNSTABLE
              WARN: SUCCESS
    assembleForPackage:
      enabled: true
      type: npm
      installCommand: "npm install --include=dev"      
      command: npm run build:dev
    package:
      enabled: true
      type: multi
      stages:
        Helm:
          enabled: true
          type: helm
        tar-package:
          type: tar.gz
          enabled: true
    publish:
      enabled: true
      type: multi
      stages:
        artifactory-spec:
          enabled: true
          type: artifactory-spec      
        Helm:
          enabled: true
          type: helm
        Docker:
          enabled: true
          type: docker
          tagStrategy: dev
          prerelease:
            tagStrategy: prerelease
          release:
            tagStrategy: release
    deploy:
      enabled: true
      type: multi
      stages:
        appDeployment:
          enabled: true
          type: helm
          name: rise-visualization-mf
          namespace: rise-dev
          configFiles:
            - repo: https://sourcecode.jnj.com/scm/asx-javz/visualization-mf.git
              repoCredentialsId: "sourcecode-bitbucket"
              files:
                - file: _scm_config/dev.values.yaml
                  type: plaintext
                - file: _scm_config/common.values.yaml
                  type: plaintext
          dryRun: false
          kubernetesConfig:
            type: eks
            region: us-east-1
            credentialsId: "itx-bvx-eatjenkinsadminapi"
            name: itx-bvx-rise-test
          atomic: false 

"""
now my pipeline passed 1. Checkout 2. Manifest Load 3. SetupValidate 4.Lint 5.Version CalculationStatic 6.AnalysisAssemble for Package 7. Package 8.Publish
but my 9. Deploy stage is failed
follwoing is error from pipeline.log help me to passed the deploy stage 
"""
<pre><code>java.lang.Exception: An error has occurred while deploying helm chart.
[2025-03-06T11:21:47.262Z]   at helm.deploy(helm.groovy:777)
[2025-03-06T11:21:47.262Z]   at deploy.execute(deploy.groovy:41)
[2025-03-06T11:21:47.262Z]   at commonStage.execute(commonStage.groovy:234)
[2025-03-06T11:21:47.262Z]   at jlib.newStage(jlib.groovy:545)
[2025-03-06T11:21:47.262Z]   at commonStage.execute(commonStage.groovy:114)
[2025-03-06T11:21:47.262Z]   at debug.withLogLevel(debug.groovy:14)
[2025-03-06T11:21:47.262Z]   at commonStage.execute(commonStage.groovy:94)
[2025-03-06T11:21:47.262Z]   at commonStage.execute(commonStage.groovy:-1)
[2025-03-06T11:21:47.262Z]   at commonStage.execute(commonStage.groovy:217)
[2025-03-06T11:21:47.262Z]   at commonStage.execute(commonStage.groovy:190)
[2025-03-06T11:21:47.262Z] Caused by: java.lang.Exception: An error has occurred while deploying helm chart [rise-visualization-mf].
[2025-03-06T11:21:47.262Z]   at helm.deploy(helm.groovy:765)
[2025-03-06T11:21:47.262Z]   at commonStage.withDirAndCleanup(commonStage.groovy:463)
[2025-03-06T11:21:47.262Z] Caused by: java.lang.Exception: history.go:56: 2025-03-06 11:15:39.501898438 +0000 UTC m=+0.795882398 [debug] getting history for release rise-visualization-mf
[2025-03-06T11:21:47.262Z] upgrade.go:164: 2025-03-06 11:15:39.519519951 +0000 UTC m=+0.813503914 [debug] preparing upgrade for rise-visualization-mf
[2025-03-06T11:21:47.262Z] upgrade.go:172: 2025-03-06 11:</code></pre>
[2025-03-06T11:21:47.262Z] <p><strong>Manifest configuration</strong>&#58;</p>
[2025-03-06T11:21:47.262Z] <pre><code>---
[2025-03-06T11:21:47.262Z] enabled: true
[2025-03-06T11:21:47.262Z] type: "helm"
[2025-03-06T11:21:47.262Z] name: "rise-visualization-mf"
[2025-03-06T11:21:47.262Z] createNamespace: true
[2025-03-06T11:21:47.262Z] chartRepoCredentialsId: "sourcecode-bitbucket"
[2025-03-06T11:21:47.262Z] atomic: false
[2025-03-06T11:21:47.262Z] kubernetesConfig:
[2025-03-06T11:21:47.262Z]   type: "eks"
[2025-03-06T11:21:47.262Z]   name: "itx-bvx-rise-test"
[2025-03-06T11:21:47.262Z]   region: "us-east-1"
[2025-03-06T11:21:47.262Z]   credentialsId: "itx-bvx-eatjenkinsadminapi"
[2025-03-06T11:21:47.262Z]   auth: {}
[2025-03-06T11:21:47.262Z] namespace: "rise-dev"
[2025-03-06T11:21:47.262Z] configFiles:
[2025-03-06T11:21:47.262Z] - repo: "https://sourcecode.jnj.com/scm/asx-javz/visualization-mf.git"
[2025-03-06T11:21:47.262Z]   repoCredentialsId: "sourcecode-bitbucket"
[2025-03-06T11:21:47.262Z]   files:
[2025-03-06T11:21:47.262Z]   - file: "_scm_config/dev.values.yaml"
[2025-03-06T11:21:47.262Z]     type: "plaintext"
[2025-03-06T11:21:47.262Z]   - file: "_scm_config/common.values.yaml"
[2025-03-06T11:21:47.262Z]     type: "plaintext"
[2025-03-06T11:21:47.262Z] dryRun: false
[2025-03-06T11:21:47.262Z] </code></pre>
[2025-03-06T11:21:47.262Z] , additionalResources=[{link=https://sourcecode.jnj.com/pages/ASX-NAGH/jpm_shared_lib/develop/browse/docs/#/user-guide/jpm-faqs/build-failed-now-what, text=FAQ guide on general jenkins build debugging practices}, {link=https://sourcecode.jnj.com/pages/ASX-NAGH/jpm_shared_lib/develop/browse/docs/#/user-guide/jpm-faq, text=All JPM FAQ guides}], _resourceFile=org/jnj/buildResultResources/commonStage.yaml, _resultName=pipeline-main-exception}, {title=Create Pull Request, image=gear2.svg, description=For project <strong>asx-javz&ndash;visualization-mf:feature/e2eVisualizeDevelop</strong> &#40;<a href="https://sourcecode.jnj.com/projects/ASX-JAVZ/repos/visualization-mf/browse?at=refs%2Fheads%2Ffeature%2Fe2eVisualizeDevelop">bitbucket link</a>&#41;&#58;
[2025-03-06T11:21:47.262Z] <a href="https://sourcecode.jnj.com/projects/ASX-JAVZ/repos/visualization-mf/compare/commits?sourceBranch=refs/heads/feature/e2eVisualizeDevelop">Click here to create a Pull Request</a>.
[2025-03-06T11:21:47.262Z] , weight=0, _resourceFile=org/jnj/buildResultResources/scmlib.yaml, _resultName=create-pull-request}, {title=CMDB Information, image=document.svg, description=<ul>
[2025-03-06T11:21:47.262Z]   <li><strong>App ID</strong>&#58; <code>APP000010043717</code></li>
[2025-03-06T11:21:47.262Z]   <li><strong>CI</strong>&#58; <code>CI000000019942139</code></li>
[2025-03-06T11:21:47.262Z]   <li><strong>Name</strong>&#58; <code>RISE-PREDEV</code></li>
[2025-03-06T11:21:47.262Z]   <li><strong>Description</strong>&#58; <code>Reliable Intelligence and Smart Engineering</code></li>
[2025-03-06T11:21:47.262Z]   <li><strong>Environment</strong>&#58; <code>Development</code></li>
[2025-03-06T11:21:47.262Z]   <li><strong>Sector</strong>&#58; <code>Corporate</code></li>
[2025-03-06T11:21:47.263Z]   <li><strong>TAO</strong>&#58; <code>Manoj Joshi (1027074)</code></li>
[2025-03-06T11:21:47.263Z] </ul>
[2025-03-06T11:21:47.263Z] , weight=0, _resourceFile=org/jnj/buildResultResources/iris.yaml, _resultName=cmdb-info}, {title=Snyk Container Scan Summary, image=notepad.svg, type=html, description=<p>Docker image scan list:</p>
[2025-03-06T11:21:47.263Z] <ul>
[2025-03-06T11:21:47.263Z]   
[2025-03-06T11:21:47.263Z]     <li><code>javz-docker.artifactrepo.jnj.com/visualization-mf:0.2.0-beta.58</code></li>
[2025-03-06T11:21:47.263Z]   
[2025-03-06T11:21:47.263Z] </ul>
[2025-03-06T11:21:47.263Z] 
[2025-03-06T11:21:47.263Z]   <p>
[2025-03-06T11:21:47.263Z]     
[2025-03-06T11:21:47.263Z]       Scan status: <span style="color: green; font-weight: bold;">No vulnerabilities found</span>
[2025-03-06T11:21:47.263Z]     
[2025-03-06T11:21:47.263Z]     
[2025-03-06T11:21:47.263Z]       <br>Snyk Overall Risk Score: <strong>0</strong>
[2025-03-06T11:21:47.263Z]     
[2025-03-06T11:21:47.263Z]     <br>Artifactory Status:&nbsp;
[2025-03-06T11:21:47.263Z]     
[2025-03-06T11:21:47.263Z]       Image is available to download - no CVE violations detected
[2025-03-06T11:21:47.263Z]     
[2025-03-06T11:21:47.263Z]     <br>Summary of scan:
[2025-03-06T11:21:47.263Z]   </p>
[2025-03-06T11:21:47.263Z]   <ul>
[2025-03-06T11:21:47.263Z]     <li><strong>GxP/SOX: </strong>false</li>
[2025-03-06T11:21:47.263Z]     <li><strong>CVE violation condition: </strong>Snyk risk score >= 800</li>
[2025-03-06T11:21:47.263Z]     <li><strong>CVE violations: </strong>0 (Exceptions: 0)</li>
[2025-03-06T11:21:47.263Z]     <li><strong>License violations: </strong>0 (Exceptions: 0)</li>
[2025-03-06T11:21:47.263Z]   </ul>
[2025-03-06T11:21:47.263Z]   
[2025-03-06T11:21:47.263Z] 
[2025-03-06T11:21:47.263Z] , weight=0, _resourceFile=org/jnj/buildResultResources/snyk.yaml, _resultName=docker-scan-summary}]
[2025-03-06T11:21:47.286Z] [Pipeline] echo
[2025-03-06T11:21:47.286Z] [Error calling https://artifactrepo.jnj.com/artifactory/api/storage/javz-docker/visualization-mf/0.2.0-beta.58/manifest.json (GET), see log for more information, ========   Stack trace start ==================
[2025-03-06T11:21:47.286Z] java.lang.Exception: history.go:56: 2025-03-06 11:15:39.501898438 +0000 UTC m=+0.795882398 [debug] getting history for release rise-visualization-mf
[2025-03-06T11:21:47.286Z] upgrade.go:164: 2025-03-06 11:15:39.519519951 +0000 UTC m=+0.813503914 [debug] preparing upgrade for rise-visualization-mf
[2025-03-06T11:21:47.286Z] upgrade.go:172: 2025-03-06 11:15:39.702922732 +0000 UTC m=+0.996906704 [debug] performing update for rise-visualization-mf
[2025-03-06T11:21:47.286Z] upgrade.go:375: 2025-03-06 11:15:39.812949526 +0000 UTC m=+1.106933510 [debug] creating upgraded release for rise-visualization-mf
[2025-03-06T11:21:47.286Z] client.go:393: 2025-03-06 11:15:39.843430108 +0000 UTC m=+1.137414062 [debug] checking 4 resources for changes
[2025-03-06T11:21:47.286Z] client.go:693: 2025-03-06 11:15:39.864657142 +0000 UTC m=+1.158641105 [debug] Patch Service "rise-visualization-mf" in namespace rise-dev
[2025-03-06T11:21:47.286Z] client.go:693: 2025-03-06 11:15:39.896515186 +0000 UTC m=+1.190499150 [debug] Patch Deployment "rise-visualization-mf" in namespace rise-dev
[2025-03-06T11:21:47.286Z] W0306 11:15:39.939434      78 warnings.go:70] [workloadlabelcheck] J&J Out Of Compliance Alert: provide missing labels: {"application-id"}
[2025-03-06T11:21:47.286Z] client.go:684: 2025-03-06 11:15:39.954755401 +0000 UTC m=+1.248739374 [debug] Looks like there are no changes for HorizontalPodAutoscaler "rise-visualization-mf-hpa"
[2025-03-06T11:21:47.286Z] client.go:684: 2025-03-06 11:15:39.984870547 +0000 UTC m=+1.278854534 [debug] Looks like there are no changes for Ingress "visualization-mf"
[2025-03-06T11:21:47.286Z] upgrade.go:447: 2025-03-06 11:15:39.995099232 +0000 UTC m=+1.289083195 [debug] waiting for release rise-visualization-mf resources (created: 0 updated: 4  deleted: 0)
[2025-03-06T11:21:47.286Z] wait.go:50: 2025-03-06 11:15:39.99512023 +0000 UTC m=+1.289104183 [debug] beginning wait for 4 resources with timeout of 5m0s
[2025-03-06T11:21:47.286Z] ready.go:452: 2025-03-06 11:15:40.050024841 +0000 UTC m=+1.344008803 [debug] ReplicaSet is not ready: rise-dev/rise-visualization-mf-9fc74667d. observedGeneration (0) does not match spec generation (1).
[2025-03-06T11:21:47.286Z] ready.go:303: 2025-03-06 11:15:42.034570103 +0000 UTC m=+3.328554065 [debug] Deployment is not ready: rise-dev/rise-visualization-mf. 0 out of 1 expected pods are ready
[2025-03-06T11:21:47.286Z] ready.go:303: 2025-03-06 11:15:44.038459622 +0000 UTC m=+5.332443580 [debug] Deployment is not ready: rise-dev/rise-visualization-mf. 0 out of 1 expected pods are ready
[2025-03-06T11:21:47.286Z] ready.go:303: 2025-03-06 11:15:46.023050573 +0000 UTC m=+7.317034545 [debug] Deployment is not ready: rise-dev/rise-visualization-mf. 0 out of 1 expected pods are ready
[2025-03-06T11:21:47.286Z] ready.go:303: 2025-03-06 11:15:48.033499411 +0000 UTC m=+9.327483373 [debug] Deployment is not ready: rise-dev/rise-visualization-mf. 0 out of 1 expected pods are ready
"""

