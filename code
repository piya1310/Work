I am trying to setup my jenkins pipeline
following are my configuration files
_scm_container\visualization-mf\container.yaml
"""
# Sets the name of the docker image pushed to Artifactory repository
# Sets the name of the docker image to build from the Dockerfile or pulled from the internet - If no Dockerfile is present the pipeline will attempt to pull from the internet
name: visualization-mf

tagStrategies:
  
  dev:
    branches:
      - develop
      - feature/*
    tags:
      - ${Major}.${Minor}.${Patch}-beta.${CommitsSinceVersionSource}
  prerelease:
    tags:
      - ${Major}.${Minor}.${Patch}-${PreReleaseTag}
  release:
    tags:
      - ${Major}.${Minor}.${Patch}
      - ${Major}.${Minor}
      - ${Major}
      - latest

 
# Desired tags of image - If no Dockerfile is present the pipeline will attempt to pull each tag from the internet
# tags:
#   - stable
#   - latest
 
# Whether or not to build with the --no-cache flag on the docker build command (Defaults to true)
useDockerCache: true
 
# Whether to override the image source. If true it will allow an upload from any repo regardless of where the image was originally uploaded from.
overrideImageSource: false
 
######   Additional Parameters   ######
# Define how Docker Image pipeline should process this image. Default value - false. Supported values
# true - build and uploaded to Artifactory
# false - skip the build and upload to Artifactory. If image was previously uploaded it will not be changed.
# delete - delete the image versions defined in this container.yaml
build: true
 
# Required for ASx projects only. Should map with the associated Artifactory Repository of your Docker Registry given by the EAT team.
# For a Docker Registry that is accessed as taaa-docker.artifactrepo.jnj.com, this should be taaa-docker
artifactoryRepository: javz-docker
"""
Following is my _scm_container\visualization-mf\Dockerfile file
"""
FROM jnj.artifactrepo.jnj.com/nginxinc/nginx-unprivileged:1.24-alpine

# Remove the default Nginx configuration
RUN rm /etc/nginx/conf.d/default.conf

# Inline Nginx configuration that listens on 0.0.0.0:3000
RUN echo 'server { \
    listen 0.0.0.0:3000; \
    server_name localhost; \
    location / { \
        root /usr/share/nginx/html; \
        index index.html; \
        try_files $uri $uri/ /index.html; \
    } \
}' > /etc/nginx/conf.d/default.conf

RUN echo "Verifying build directory..." && \
    ls -l /usr/share/nginx/html/ && \
    test -d /usr/share/nginx/html/build

# Copy the contents of the build folder to the Nginx web server directory
COPY build/ /usr/share/nginx/html/

# Expose port 3000
EXPOSE 3000

# Start Nginx and your React application on port 3000
CMD ["nginx", "-g", "daemon off;"]
"""
following is my manifest-advanced.yaml file
"""
# Pipeline details across environments (defaults)
common:
  pipelineType: app-dev
  debug: true
  helm:
    chartRepo: javz-helm-charts
    chartName: rise-visualization-mf

  versionFileUpdates:
    - type: yaml
      file: _scm_helm/Chart.yaml
      path: version
    - type: yaml
      file: _scm_helm/values.yaml
      path: image.tag
  assembleForPackage:
    type: npm
    enabled: true
    credentialsId: jnj-eat-artifactory-build
    dir: project
    installCommand: npm install
    persistStash: true
  versionCalculation:
    enabled: true
    type: gitversion

  unitTest:
    enabled: false

  lint:
    enabled: false

  staticAnalysis:
    enabled: false
    type: multi
    stages:
      sonar:
        enabled: false
        type: sonar
        shortLivedAnalysis: false
        longLivedAnalysis: false
        shortLivedBuildResults:
          BLOCKER:
            FAILURE: 0
          CRITICAL:
            FAILURE: 50
          IGNORE:
            MAJOR: true
            MINOR: true
            INFO: true
          QUALITY_GATE:
            ERROR: FAILURE
            WARN: SUCCESS
        longLivedBuildResults:
          BLOCKER:
            FAILURE: 0
          CRITICAL:
            FAILURE: 50
          IGNORE:
            MAJOR: true
            MINOR: true
            INFO: true
          QUALITY_GATE:
            ERROR: UNSTABLE
            WARN: SUCCESS

  package:
    enabled: false
    type: multi
    stages:
      Helm:
        type: helm
        enabled: false
        chartRepo: javz-helm-charts
        chartName: rise-visualization-mf
        versionFileUpdates:
          - type: yaml
            file: _scm_helm/Chart.yaml
            path: version
          - type: yaml
            file: _scm_helm/values.yaml
            path: image.tag
      tar-package:
        type: tar.gz
        enabled: false
        name: visualization-mf
        packageDir: ./

  publish:
    enabled: false
    type: "multi"
    stages:
      artifactory-spec:
        enabled: false
        type: artifactory-spec
        target: javz-docker/visualization-mf/
        fileName: visualization-mf-*.tar.gz
      Helm:
        enabled: false
        type: helm
        chartRepo: javz-helm-charts
        chartName: rise-visualization-mf
      Docker:
        enabled: false
        type: docker
        credsList:
          - registry: https://jnj.artifactrepo.jnj.com
            credentialsId: jnj-eat-artifactory
          - registry: https://javz-docker.artifactrepo.jnj.com
            credentialsId: sourcecode-bitbucket

  buildAnalysis:
    enabled: false
    xrayFailBuild: false

  buildAnnouncements:
    enabled: true
    destinations:
      team-emails:
        type: email
        format: buildstate
        recipients: [DL-RISE-Monitoring@its.jnj.com]
        startEnabled: false
        successEnabled: true
        unstableEnabled: true
        failureEnabled: true
        jobTriggers: []

  deploy:
    enabled: true
    type: "multi"
    parallel: "false"
    stages:
      # appDeployment section deploys the published helm chart to kubernetes cluster
      appDeployment:
        enabled: false
        type: helm
        name: rise-visualization-mf
        createNamespace: true
        chartRepoCredentialsId: "sourcecode-bitbucket"
        atomic: true
        kubernetesConfig:
          type: eks
          name: itx-bvx-rise-test
          region: us-east-1
          credentialsId: "itx-bvx-eatjenkinsadminapi"

  resolveArtifacts:
    enabled: false

environments:

  
  DEV:
    cmdb:
      appid: APP000010043717
      deploymentEnvironment: development
    versionCalculation:
      patternType: jnj-developer-branch
    unitTest:
      enabled: false
      dir: "project"
      type: npm
      coverageReportFile: jest/coverage/lcov.info
    lint:
      enabled: true
      dir: "project"
      type: npm
    staticAnalysis:
      enabled: true
      type: multi
      stages:
        sonar:
          enabled: true
          type: sonar
          shortLivedAnalysis: false
          longLivedAnalysis: true
          shortLivedBuildResults:
            BLOCKER:
              FAILURE: 0
            CRITICAL:
              FAILURE: 50
            IGNORE:
              MAJOR: true
              MINOR: true
              INFO: true
            QUALITY_GATE:
              ERROR: FAILURE
              WARN: UNSTABLE
          longLivedBuildResults:
            BLOCKER:
              FAILURE: 0
            CRITICAL:
              FAILURE: 50
            IGNORE:
              MAJOR: true
              MINOR: true
              INFO: true
            QUALITY_GATE:
              ERROR: UNSTABLE
              WARN: SUCCESS
    assembleForPackage:
      enabled: true
      type: npm
      installCommand: "npm install --include=dev"      
      command: npm run build:dev
    package:
      enabled: true
      type: multi
      stages:
        Helm:
          enabled: true
          type: helm
        tar-package:
          type: tar.gz
          enabled: true
    publish:
      enabled: true
      type: multi
      stages:
        artifactory-spec:
          enabled: true
          type: artifactory-spec      
        Helm:
          enabled: true
          type: helm
        Docker:
          enabled: true
          type: docker
          tagStrategy: dev
          prerelease:
            tagStrategy: prerelease
          release:
            tagStrategy: release
    deploy:
      enabled: true
      type: multi
      stages:
        appDeployment:
          enabled: true
          type: helm
          name: rise-visualization-mf
          namespace: rise-dev
          configFiles:
            - repo: https://sourcecode.jnj.com/scm/asx-javz/visualization-mf.git
              repoCredentialsId: "sourcecode-bitbucket"
              files:
                - file: _scm_config/dev.values.yaml
                  type: plaintext
                - file: _scm_config/common.values.yaml
                  type: plaintext
          dryRun: false
          kubernetesConfig:
            type: eks
            region: us-east-1
            credentialsId: "itx-bvx-eatjenkinsadminapi"
            name: itx-bvx-rise-test
          atomic: false
  
"""
following are pipeline.log 

[2025-03-06T10:48:40.414Z] [Pipeline] echo
[2025-03-06T10:48:40.414Z] [1;34mUsing build command: [docker  build   -t "javz-docker.artifactrepo.jnj.com/visualization-mf:0.2.0-beta.56" -f "_scm_container/visualization-ms/Dockerfile" --iidfile="visualization-mf-imageId.txt" .][0m
[2025-03-06T10:48:40.415Z] [Pipeline] }
[2025-03-06T10:48:40.415Z] 
[2025-03-06T10:48:40.427Z] [Pipeline] // ansiColor
[2025-03-06T10:48:40.445Z] [Pipeline] isUnix
[2025-03-06T10:48:40.450Z] [Pipeline] sh
[2025-03-06T10:48:40.712Z] + docker build -t javz-docker.artifactrepo.jnj.com/visualization-mf:0.2.0-beta.56 -f _scm_container/visualization-ms/Dockerfile --iidfile=visualization-mf-imageId.txt .
[2025-03-06T10:48:41.270Z] #0 building with "default" instance using docker driver
[2025-03-06T10:48:41.270Z] 
[2025-03-06T10:48:41.270Z] #1 [internal] load build definition from Dockerfile
[2025-03-06T10:48:41.270Z] #1 transferring dockerfile: 853B done
[2025-03-06T10:48:41.270Z] #1 DONE 0.0s
[2025-03-06T10:48:41.270Z] 
[2025-03-06T10:48:41.270Z] #2 [internal] load metadata for jnj.artifactrepo.jnj.com/nginxinc/nginx-unprivileged:1.24-alpine
[2025-03-06T10:48:41.827Z] #2 ...
[2025-03-06T10:48:41.827Z] 
[2025-03-06T10:48:41.827Z] #3 [auth] nginxinc/nginx-unprivileged:pull token for jnj.artifactrepo.jnj.com
[2025-03-06T10:48:41.827Z] #3 DONE 0.0s
[2025-03-06T10:48:41.827Z] 
[2025-03-06T10:48:41.827Z] #2 [internal] load metadata for jnj.artifactrepo.jnj.com/nginxinc/nginx-unprivileged:1.24-alpine
[2025-03-06T10:48:43.184Z] #2 DONE 2.2s
[2025-03-06T10:48:43.438Z] 
[2025-03-06T10:48:43.438Z] #4 [internal] load .dockerignore
[2025-03-06T10:48:43.438Z] #4 transferring context: 2B done
[2025-03-06T10:48:43.438Z] #4 DONE 0.1s
[2025-03-06T10:48:43.438Z] 
[2025-03-06T10:48:43.438Z] #5 [1/5] FROM jnj.artifactrepo.jnj.com/nginxinc/nginx-unprivileged:1.24-alpine@sha256:2c203600ca6257c503caa61c1e08d05a67f75e7d0c85b1be9c10d8c1d0780d91
[2025-03-06T10:48:43.438Z] #5 DONE 0.0s
[2025-03-06T10:48:43.438Z] 
[2025-03-06T10:48:43.438Z] #6 [2/5] RUN rm /etc/nginx/conf.d/default.conf
[2025-03-06T10:48:43.438Z] #6 CACHED
[2025-03-06T10:48:43.438Z] 
[2025-03-06T10:48:43.438Z] #7 [3/5] RUN echo 'server {     listen 0.0.0.0:3000;     server_name localhost;     location / {         root /usr/share/nginx/html;         index index.html;         try_files $uri $uri/ /index.html;     } }' > /etc/nginx/conf.d/default.conf
[2025-03-06T10:48:43.438Z] #7 CACHED
[2025-03-06T10:48:43.438Z] 
[2025-03-06T10:48:43.438Z] #8 [internal] load build context
[2025-03-06T10:48:43.438Z] #8 transferring context: 4.74MB 0.0s done
[2025-03-06T10:48:43.692Z] #8 DONE 0.2s
[2025-03-06T10:48:43.692Z] 
[2025-03-06T10:48:43.692Z] #9 [4/5] RUN echo "Verifying build directory..." &&     ls -l /usr/share/nginx/html/ &&     test -d /usr/share/nginx/html/build
[2025-03-06T10:48:43.692Z] #9 0.334 Verifying build directory...
[2025-03-06T10:48:43.946Z] #9 0.334 total 8
[2025-03-06T10:48:43.946Z] #9 0.334 -rw-r--r--    1 root     root           497 Jun 17  2023 50x.html
[2025-03-06T10:48:43.946Z] #9 0.334 -rw-r--r--    1 root     root           615 Jun 17  2023 index.html
[2025-03-06T10:48:58.757Z] #9 ERROR: process "/bin/sh -c echo \"Verifying build directory...\" &&     ls -l /usr/share/nginx/html/ &&     test -d /usr/share/nginx/html/build" did not complete successfully: exit code: 1
[2025-03-06T10:48:58.757Z] ------
[2025-03-06T10:48:58.757Z]  > [4/5] RUN echo "Verifying build directory..." &&     ls -l /usr/share/nginx/html/ &&     test -d /usr/share/nginx/html/build:
[2025-03-06T10:48:58.757Z] 0.334 Verifying build directory...
[2025-03-06T10:48:58.757Z] 0.334 total 8
[2025-03-06T10:48:58.757Z] 0.334 -rw-r--r--    1 root     root           497 Jun 17  2023 50x.html
[2025-03-06T10:48:58.757Z] 0.334 -rw-r--r--    1 root     root           615 Jun 17  2023 index.html
[2025-03-06T10:48:58.758Z] ------
[2025-03-06T10:48:58.758Z] Dockerfile:17
[2025-03-06T10:48:58.758Z] --------------------
[2025-03-06T10:48:58.758Z]   16 |     
[2025-03-06T10:48:58.758Z]   17 | >>> RUN echo "Verifying build directory..." && \
[2025-03-06T10:48:58.758Z]   18 | >>>     ls -l /usr/share/nginx/html/ && \
[2025-03-06T10:48:58.758Z]   19 | >>>     test -d /usr/share/nginx/html/build
[2025-03-06T10:48:58.758Z]   20 |     
[2025-03-06T10:48:58.758Z] --------------------
[2025-03-06T10:48:58.758Z] ERROR: failed to solve: process "/bin/sh -c echo \"Verifying build directory...\" &&     ls -l /usr/share/nginx/html/ &&     test -d /usr/share/nginx/html/build" did not complete successfully: exit code: 1
[2025-03-06T10:48:58.761Z] [Pipeline] }
[2025-03-06T10:48:58.773Z] [Pipeline] // withEnv
[2025-03-06T10:48:58.787Z] [Pipeline] }
[2025-03-06T10:48:58.801Z] [Pipeline] // withCredentials
[2025-03-06T10:48:58.819Z] [Pipeline] deleteDir
[2025-03-06T10:49:12.577Z] [Pipeline] }
[2025-03-06T10:49:12.589Z] [Pipeline] // dir
[2025-03-06T10:49:12.604Z] [Pipeline] }
[2025-03-06T10:49:12.617Z] [Pipeline] // withEnv
[2025-03-06T10:49:12.636Z] [Pipeline] isUnix
[2025-03-06T10:49:12.640Z] [Pipeline] sh
[2025-03-06T10:49:12.902Z] + rm -r /tmp/tmp.jWr7vO0sji
[2025-03-06T10:49:12.913Z] [Pipeline] ansiColor
[2025-03-06T10:49:12.913Z] [Pipeline] {
[2025-03-06T10:49:12.913Z] 
[2025-03-06T10:49:12.931Z] [Pipeline] echo
[2025-03-06T10:49:12.931Z] [1;35mat class.method: commonStage.execute line: commonStage.groovy:260[0m
[2025-03-06T10:49:12.931Z] [Pipeline] }
[2025-03-06T10:49:12.931Z] 
[2025-03-06T10:49:12.945Z] [Pipeline] // ansiColor
[2025-03-06T10:49:12.965Z] [Pipeline] ansiColor
[2025-03-06T10:49:12.965Z] [Pipeline] {
[2025-03-06T10:49:12.965Z] 
[2025-03-06T10:49:12.981Z] [Pipeline] echo
[2025-03-06T10:49:12.982Z] [1;31mpublish stage execution failed.[0m
[2025-03-06T10:49:12.982Z] [Pipeline] }
[2025-03-06T10:49:12.982Z] 
[2025-03-06T10:49:12.994Z] [Pipeline] // ansiColor
[2025-03-06T10:49:13.078Z] [Pipeline] libraryResource
[2025-03-06T10:49:13.084Z] [Pipeline] readYaml
[2025-03-06T10:49:13.118Z] [Pipeline] libraryResource
[2025-03-06T10:49:13.192Z] [Pipeline] ansiColor
[2025-03-06T10:49:13.192Z] [Pipeline] {
[2025-03-06T10:49:13.192Z] 
[2025-03-06T10:49:13.208Z] [Pipeline] echo
[2025-03-06T10:49:13.209Z] [1;31mMulti-Stage publish/Docker execution failed.[0m
[2025-03-06T10:49:13.209Z] [Pipeline] }
[2025-03-06T10:49:13.209Z] 
[2025-03-06T10:49:13.221Z] [Pipeline] // ansiColor
[2025-03-06T10:49:13.241Z] [Pipeline] ansiColor
[2025-03-06T10:49:13.241Z] [Pipeline] {
[2025-03-06T10:49:13.241Z] 
[2025-03-06T10:49:13.257Z] [Pipeline] echo
[2025-03-06T10:49:13.257Z] [1;35mat class.method: commonStage.execute line: commonStage.groovy:222[0m
[2025-03-06T10:49:13.257Z] [Pipeline] }
[2025-03-06T10:49:13.258Z] 
[2025-03-06T10:49:13.270Z] [Pipeline] // ansiColor
[2025-03-06T10:49:13.354Z] [Pipeline] ansiColor
[2025-03-06T10:49:13.355Z] [Pipeline] {
[2025-03-06T10:49:13.355Z] 
[2025-03-06T10:49:13.371Z] [Pipeline] echo
[2025-03-06T10:49:13.371Z] [1;31m========   Stack trace start ==================
[2025-03-06T10:49:13.371Z] java.lang.Exception: error building scmContainerImage [visualization-ms]
[2025-03-06T10:49:13.371Z]   at dockerImage.buildProjectImages(dockerImage.groovy:426)
[2025-03-06T10:49:13.371Z]   at dockerImage.buildProjectImages(dockerImage.groovy:391)
[2025-03-06T10:49:13.371Z]   at ensure.dockerNode(ensure.groovy:82)
[2025-03-06T10:49:13.371Z]   at dockerImage.buildProjectImages(dockerImage.groovy:300)
[2025-03-06T10:49:13.371Z]   at publish.execute(publish.groovy:64)
[2025-03-06T10:49:13.371Z]   at commonStage.execute(commonStage.groovy:234)
[2025-03-06T10:49:13.371Z]   at jlib.newStage(jlib.groovy:545)
[2025-03-06T10:49:13.371Z]   at commonStage.execute(commonStage.groovy:114)
[2025-03-06T10:49:13.371Z]   at debug.withLogLevel(debug.groovy:14)
[2025-03-06T10:49:13.371Z]   at commonStage.execute(commonStage.groovy:94)
[2025-03-06T10:49:13.371Z]   at commonStage.execute(commonStage.groovy:-1)
[2025-03-06T10:49:13.371Z]   at commonStage.execute(commonStage.groovy:217)
[2025-03-06T10:49:13.371Z]   at commonStage.execute(commonStage.groovy:190)
[2025-03-06T10:49:13.371Z] Caused by: hudson.AbortException: script returned exit code 1
[2025-03-06T10:49:13.371Z] ========   Stack trace end ==================[0m
help me to find out the solution why my publish stage in jenkins pipeline is got failed. 
